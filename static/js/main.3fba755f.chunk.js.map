{"version":3,"sources":["components/Title/Title.js","components/Footer/Footer.js","components/Compilation/Compilation.js","components/CompilationsList/CompilationsList.js","components/About/About.js","components/CompilationDetails/CompilationDetails.js","components/App.js","components/serviceWorker.js","index.js"],"names":["Title","props","className","activeClassName","exact","to","Component","Footer","href","Compilation","title","person","image","id","src","process","width","height","alt","compilations","data","map","i","images","key","CompilationsList","About","CompilationDetails","match","params","hymns","number","name","chords","style","App","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sqMAyBeA,G,wDApBX,WAAYC,GAAQ,uCACVA,G,qDAGN,OACI,yBAAKC,UAAU,SACX,gCACI,oDACA,yBAAKA,UAAU,kBAAf,oCACA,6BACA,kBAAC,IAAD,CAASA,UAAU,WAAYC,gBAAgB,kBAC/CC,OAAK,EAACC,GAAG,KADT,eAEA,kBAAC,IAAD,CAASH,UAAU,WAAYC,gBAAgB,kBAC/CE,GAAG,UADH,gB,GAbAC,cCmBLC,G,wDAlBX,WAAYN,GAAQ,uCACVA,G,qDAGN,OACI,yBAAKC,UAAU,eACX,gCACI,wBAAIA,UAAU,eACV,4BAAI,uBAAGM,KAAK,mCAAR,oBACJ,4BAAI,uBAAGA,KAAK,8BAAR,mBACJ,mE,GAXHF,c,YCmBNG,MAjBf,SAAqBR,GAAQ,IACjBS,EAA6BT,EAA7BS,MAAOC,EAAsBV,EAAtBU,OAAQC,EAAcX,EAAdW,MAAOC,EAAOZ,EAAPY,GAC9B,OACI,yBAAKX,UAAU,eACX,kBAAC,IAAD,CAAMG,GAAE,mBAAcQ,IAClB,yBAAKC,IAAG,UAAKC,wBAAL,kBAAqCH,GAASI,MAAM,OAAOC,OAAO,OAAOC,IAAI,WAEzF,4BACI,kBAAC,IAAD,CAAMb,GAAE,mBAAcQ,IACjBH,IAGT,6BAAMC,K,QCbZQ,EAAeC,EAAKC,KAAI,WAA4BC,GAAO,IAAhCZ,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,OAAQY,EAAgB,EAAhBA,OAC5C,OACA,kBAAC,EAAD,CACIV,GAAIS,EACJE,IAAKd,EACLA,MAAOA,EACPC,OAAQA,EACRC,MAAOW,EAAO,QAkBPE,E,kDAZX,WAAYxB,GAAQ,uCACVA,G,qDAGN,OACI,yBAAKC,UAAU,oBACTiB,O,GAPab,a,MCDhBoB,MAZf,WACE,OACE,yBAAKxB,UAAU,SACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,0DACA,krC,MCgBKyB,MAtBf,SAA4B1B,GAAQ,IAC1BY,EAAOZ,EAAM2B,MAAMC,OAAnBhB,GADyB,EAEQO,EAAKP,GAAtCU,EAFyB,EAEzBA,OAAQb,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,OAFU,KAEFmB,MACSV,EAAKP,GAAIiB,MAAM,IAA/CC,EAHyB,EAGzBA,OAAQC,EAHiB,EAGjBA,KAAMC,EAHW,EAGXA,OAAQC,EAHG,EAGHA,MAE9B,OACE,yBAAKhC,UAAU,gBACb,6BACE,yBAAKY,IAAG,UAAKC,wBAAL,mBAAsCQ,EAAO,IAAML,IAAI,WAGjE,6BACE,4BAAMR,GACN,yBAAKR,UAAU,QAASS,GACxB,6BAAOoB,EAAP,KAAmBC,GACnB,+CAAsBC,GACtB,6CAAoBC,MCGbC,MAdf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKjC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOE,OAAK,EAACgC,KAAK,IAAIC,UAAWZ,IACjC,kBAAC,IAAD,CAAOW,KAAK,SAASC,UAAWX,IAChC,kBAAC,IAAD,CAAOU,KAAK,eAAeC,UAAWV,IACtC,kBAAC,EAAD,SCLYW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MACvB,2DCZNc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3fba755f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Title.css';\n\nclass Title extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <div className=\"Title\">\n                <header>\n                    <h1>Song Circle Acoustic</h1>\n                    <div className=\"Title-Subtitle\">Sacred Songs for Acoustic Guitar</div>\n                    <div>\n                    <NavLink className=\"nav-link\"  activeClassName=\"nav-link-active\"\n                    exact to=\"/\">Collections</NavLink>\n                    <NavLink className=\"nav-link\"  activeClassName=\"nav-link-active\"\n                    to=\"/about\">About</NavLink>\n                    </div>\n                </header>\n            </div>\n        )\n    }\n}\nexport default Title","import React, { Component } from 'react';\nimport './Footer.css';\n\n\nclass Footer extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <div className='footer-info'>\n                <footer>\n                    <ul className='footer-list'>\n                        <li><a href=\"https://www.nossairmandade.com/\">Nossa Irmandade</a></li>\n                        <li><a href=\"http://www.santodaime.org/\">SantoDaime.org</a></li>\n                        <li>Anastasia Gallardo &copy; 2020</li>\n                    </ul>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default Footer","import React from 'react';\nimport './Compilation.css';\nimport { Link } from 'react-router-dom';\n// import data from '../collections.json';\n\n\nfunction Compilation(props) {\n    const { title, person, image, id } = props\n    return (\n        <div className=\"Compilation\">\n            <Link to={`/details/${id}`}>\n                <img src={`${process.env.PUBLIC_URL}images/${image}`} width='auto' height='auto' alt='hello'/>\n            </Link>\n            <h1>\n                <Link to={`/details/${id}`}>\n                    {title}\n                </Link>\n            </h1>\n            <div>{person}</div>\n        </div>\n    )\n}\n\nexport default Compilation","import React, { Component } from 'react';\nimport './CompilationsList.css'\nimport Compilation from '../Compilation/Compilation';\nimport data from '../collections.json';\n\nconst compilations = data.map(({ title, person, images }, i) => {\n    return (\n    <Compilation\n        id={i}\n        key={title}\n        title={title}\n        person={person}\n        image={images[0]}\n    />\n    )\n})\n\nclass CompilationsList extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return(\n            <div className=\"CompilationsList\">\n                { compilations }\n            </div>\n        )\n    }\n}\n\nexport default CompilationsList;\n","import React from 'react'\n\nimport './About.css'\n\nfunction About() {\n  return (\n    <div className=\"about\">\n      <div className=\"overlay\"></div>\n        <div className=\"about-text\">\n          <h1>About Song Circle Acoustic</h1>\n          <p>The power of music is undeniable. Songs are used to motivate action, calm sorrows and inspire deep emotion. The modern day use of music is ubiquitous but music has had a place in the human experience since time immemorial. For centuries the chanting of sacred sanskrit tones, or mantras, has been practiced in the Eastern traditions to bring spiritual practitioners into states of spiritual bliss. The sound of \"om\" reflects the peaceful hum of all creation in the universe. Indigenous peoples throughout the globe have utilized the power of music to evoke transcendant states of communion with nature from within their people. This ancient way of showing reverence to sacred music is still practiced today. One such tradition that honors the application of sacred music for spiritual purposes is the music-based religion of the Santo Daime. Founded in Brazil by Mestre Raimundo Irineu da Serra, the Santo Daime tradition transmits its esoteric spiritual teachings through the music that its practitioners receive from transcendant states of spiritual communion with Divine energy. Here is a resource for the study of some of that music for the acoustic guitar. Enjoy!</p>\n        </div>\n    </div>\n  )\n}\n\nexport default About","import React from 'react';\nimport './CompilationDetails.css'\nimport data from '../collections.json';\n\nfunction CompilationDetails(props) {\n  const { id } = props.match.params // Location index\n  const { images, title, person, hymns } = data[id]\n  const { number, name, chords, style } = data[id].hymns[0]\n\n  return (\n    <div className='comp-details'>\n      <div>\n        <img src={`${process.env.PUBLIC_URL}/images/${images[0]}`} alt=\"hello\" />\n      </div>\n\n      <div>\n        <h1>{ title }</h1>\n        <div className=\"name\">{ person }</div>\n        <div>{ number }. { name }</div>\n        <div>Guitar Chords: { chords }</div>\n        <div>Dance Style: { style }</div>\n      </div>\n    </div>\n  )\n}\n\nexport default CompilationDetails","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Title from './Title/Title';\nimport Footer from './Footer/Footer';\nimport CompilationsList from './CompilationsList/CompilationsList';\nimport About from './About/About';\nimport CompilationDetails from './CompilationDetails/CompilationDetails';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Title />\n        <Route exact path='/' component={CompilationsList} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/details/:id\" component={CompilationDetails} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './components/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}